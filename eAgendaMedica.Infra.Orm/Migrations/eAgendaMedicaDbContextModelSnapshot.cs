// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eAgendaMedica.Infra.Orm.Compartilhado;

#nullable disable

namespace eAgendaMedica.Infra.Orm.Migrations
{
    [DbContext(typeof(eAgendaMedicaDbContext))]
    partial class eAgendaMedicaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloCirurgia.Cirurgia", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("horaInicio")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("horaTermino")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("TBCirurgia", (string)null);
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloConsulta.Consulta", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("horaInicio")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("horaTermino")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("TBConsulta", (string)null);
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloMedico.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CirurgiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConsultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CirurgiaId");

                    b.HasIndex("ConsultaId");

                    b.ToTable("TBMedico", (string)null);
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloCirurgia.Cirurgia", b =>
                {
                    b.HasOne("eAgendaMedica.Dominio.ModuloMedico.Medico", "Medico")
                        .WithMany("Cirurgias")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_TBMedico_TBCirugia");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloConsulta.Consulta", b =>
                {
                    b.HasOne("eAgendaMedica.Dominio.ModuloMedico.Medico", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_TBMedico_TBConsulta");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloMedico.Medico", b =>
                {
                    b.HasOne("eAgendaMedica.Dominio.ModuloCirurgia.Cirurgia", null)
                        .WithMany("Medicos")
                        .HasForeignKey("CirurgiaId");

                    b.HasOne("eAgendaMedica.Dominio.ModuloConsulta.Consulta", null)
                        .WithMany("Medicos")
                        .HasForeignKey("ConsultaId");
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloCirurgia.Cirurgia", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloConsulta.Consulta", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("eAgendaMedica.Dominio.ModuloMedico.Medico", b =>
                {
                    b.Navigation("Cirurgias");

                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
